<?php
 ?>
<?php
 class Email { private $emailFrom; private $status; public function __construct($emailTo, $emailSubject, $emailTemplate) { $f3 = Base::instance(); $this->emailFrom = $f3->get('SITE.EMAIL'); $emailBody = Template::instance()->render($emailTemplate); $emailProtocol = NULL; if (($sendGridApiKey = $f3->get('SENDGRID.KEY'))) { $emailProtocol = 'SendGrid'; $this->sendGridEmail($sendGridApiKey, $this->emailFrom, $emailTo, $emailSubject, $emailBody); } elseif (($smtpHost = $f3->get('SMTP.HOST')) && ($smtpPort = $f3->get('SMTP.PORT')) && ($smtpUser = $f3->get('SMTP.USER')) && ($smtpPassword = $f3->get('SMTP.PASSWORD'))) { $emailProtocol = 'SMTP'; $this->smtpEmail($smtpHost, $smtpPort, $smtpUser, $smtpPassword, $this->emailFrom, $emailTo, $emailSubject, $emailBody); } else { $emailProtocol = 'SYSTEM'; $this->systemEmail($this->emailFrom, $emailTo, $emailSubject, $emailBody); } Logger::log(sprintf('%s email from %s to %s %s', $emailProtocol, $this->emailFrom, $emailTo, $this->status ? 'SENT' : 'FAILED')); } public function getStatus() { return $this->status; } private function smtpEmail($smtpHost, $smtpPort, $smtpUser, $smtpPassword, $emailFrom, $emailTo, $emailSubject, $emailBody) { $smtp = new SMTP( $smtpHost, $smtpPort, NULL, $smtpUser, $smtpPassword ); $smtp->set('Content-type', 'text/html; charset=UTF-8'); $smtp->set('From', $emailFrom); $smtp->set('To', $emailTo); $smtp->set('Subject', $emailSubject); $this->status = $smtp->send($emailBody); if (!$this->status) { Logger::log('smtpEmail: error'); } } private function sendGridEmail($apiKey, $emailFrom, $emailTo, $emailSubject, $emailBody) { $sgFrom = new SendGrid\Email(null, $emailFrom); $sgTo = new SendGrid\Email(null, $emailTo); $sgBody = new SendGrid\Content('text/html', $emailBody); $sgEmail = new SendGrid\Mail($sgFrom, $emailSubject, $sgTo, $sgBody); $sg = new \SendGrid($apiKey); $sgResponse = $sg->client->mail()->send()->post($sgEmail); $statusCode = $sgResponse->statusCode(); $this->status = $statusCode>=200 && $statusCode<300 ? TRUE : FALSE; if (!$this->status) { Logger::log('sendGridEmail: error ' . $statusCode); } } private function systemEmail($emailFrom, $emailTo, $emailSubject, $emailBody) { $emailHeaders = "From: " . $emailFrom . "\r\n"; $emailHeaders .= "MIME-Version: 1.0\r\n"; $emailHeaders .= "Content-Type: text/html; charset=UTF-8\r\n"; $this->status = @mail($emailTo, $emailSubject, $emailBody, $emailHeaders); if (!$this->status) { Logger::log('systemEmail: error'); Logger::log(error_get_last()); } } }